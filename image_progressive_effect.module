<?php

/**
 * Implements hook_image_effect_info().
 */
function image_progressive_effect_image_effect_info() {
  $effects = array();

  $effects['image_progressive_effect'] = array(
    'label' => t('Progressive'),
    'help' => t('Set interlace option.'),
    'effect callback' => 'image_progressive_effect',
    'dimensions passthrough' => TRUE,
  );

  return $effects;
}

/**
 * Invoke the image effect.
 */
function image_progressive_effect($image, $data) {
  return image_toolkit_invoke('image_progressive_effect', $image);
}

/**
 * Set the interlace bit (GD).
 */
function image_gd_image_progressive_effect($image, $params = array()) {
  imageinterlace($image->resource, TRUE);

  return TRUE;
}

/**
 * Set the interlace bit (ImageMagick).
 */
function image_imagemagick_image_progressive_effect($image, $params = array()) {
  $image->setInterlaceScheme(Imagick::INTERLACE_PLANE);

  return TRUE;
}

/**
 * Implements hook_form_alter().
 *
 * Set a warning message if the progressive effect is not the last on the list.
 */
function image_progressive_effect_form_image_style_form_alter(&$form, &$form_state, $form_id) {
  $style_name = $form['name']['#default_value'];
  $progressive_effect_attached = FALSE;
  $is_not_last = FALSE;
  // Find out if the progressive effect is attached to the image style
  // and if the effect is the last on the list
  foreach (element_children($form['effects']) as $ieid) {
    if (is_int($ieid)) {
      $effect = image_effect_load($ieid, $style_name);
      if ($effect['name'] == 'image_progressive_effect') {
        $progressive_effect_attached = TRUE;
        $is_not_last = FALSE;
      }
      else {
        $is_not_last = TRUE;
      }
    }
  }
  // Set a warning message if the progressive effect is the last on the list
  if ($progressive_effect_attached && $is_not_last) {
    drupal_set_message(t('The "Progressive" image effect must be the last on the list to take effect.'), 'warning', FALSE);
  }
}
